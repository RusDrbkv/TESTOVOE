version: '3'

services:
  kafka:
    image: wurstmeister/kafka:latest
    container_name: my-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: "sarama_topic:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - my-network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: my-zookeeper
    ports:
      - "2181:2181"
    networks:
      - my-network


  db:
    image: postgres:latest
    container_name: my-postgres-db
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: Rus.drbkv
      POSTGRES_PASSWORD: Aa123456
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: my-golang-app1
    ports:
      - "8080:8080"
    depends_on:
      - db
      - kafka
    networks:
      - my-network



networks:
  my-network:  
    driver: bridge  

volumes:
  postgres_data:
